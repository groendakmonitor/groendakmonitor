{"version":3,"sources":["store/store.ts","components/dashboard/WaterChart/LineChart.tsx","assets/images/loading.svg","components/dashboard/Widget/Widget.tsx","components/dashboard/WaterChart/WaterChart.tsx","components/dashboard/Weather/Weather.tsx","components/dashboard/WaterSaved/WaterSaved.tsx","components/dashboard/Saturation/Saturation.tsx","misc/authentication.ts","components/admin/CustomerList/CustomerRow.tsx","components/admin/CustomerList/CustomerList.tsx","components/admin/Login/styles/groendak.jpg","components/admin/Login/Login.tsx","components/admin/Admin/Admin.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["determineInitialCustomerId","fromStorage","localStorage","getItem","parseInt","useWaterStore","create","set","get","customerId","waterData","setCustomerId","setItem","toString","fetchWaterData","undefined","fetch","process","then","res","json","data","getTotalIncoming","reduce","acc","value","incoming","getTotalOutgoing","outgoing","options","scales","yAxes","ticks","beginAtZero","xAxes","callback","index","values","Date","toLocaleTimeString","tooltips","callbacks","title","tooltip","label","toLocaleString","legend","LineChart","useEffect","timeout","setInterval","clearInterval","useMemo","incomingData","outgoingData","labels","push","date","datasets","backgroundColor","fill","type","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","strokeWidth","strokeLinecap","cx","cy","r","className","SvgLoading","_ref","svgRef","titleId","props","width","height","viewBox","xmlnsname","ref","id","ForwardRef","Widget","children","loading","WaterChart","useState","setLoading","setTimeout","clearTimeout","Weather","setData","catch","error","console","name","weather","description","main","temp","toFixed","humidity","addDay","toLocaleDateString","days","getTime","WaterSaved","totalIncoming","store","totalOutgoing","diff","Math","ceil","Saturation","saturation","isNaN","text","getAuthToken","clearAuthToken","removeItem","CustomerRow","selected","onClick","last_water","CustomerList","onLogout","scope","style","map","c","Login","onLogin","password","setPassword","onChange","e","currentTarget","method","headers","body","JSON","stringify","response","status","warn","token","src","img","alt","Admin","onClose","authenticated","setAuthenticated","role","aria-hidden","data-dismiss","aria-label","App","admin","setAdmin","useKey","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8523b182.chunk.js","sourcesContent":["import create from \"zustand\";\nimport { WaterResponse } from \"../models/water\";\n\ntype WaterStore = {\n  customerId?: number; // maybe this id should not be here\n  waterData: WaterResponse[],\n  setCustomerId: (customerId: number) => void;\n  fetchWaterData(): void,\n  getTotalIncoming(): number,\n  getTotalOutgoing(): number,\n}\n\nconst determineInitialCustomerId = () => {\n  const fromStorage = localStorage.getItem(\"customerId\");\n  if (!fromStorage) return undefined;\n  return parseInt(fromStorage)\n}\n\nexport const useWaterStore = create<WaterStore>(\n  (set, get): WaterStore => ({\n    customerId: determineInitialCustomerId(),\n    waterData: [],\n    \n    setCustomerId: (customerId: number) => {\n      localStorage.setItem(\"customerId\", customerId.toString());\n      set({ customerId });\n    },\n\n    fetchWaterData(): void {\n      const { customerId } = get();\n      if (customerId !== undefined) {\n        fetch(`${process.env.REACT_APP_API_URL}/water/${customerId}`)\n          .then<WaterResponse[]>(res => res.json())\n          .then((data) => {\n            set({\n              waterData: data\n            })\n          })\n      }\n    },\n\n    getTotalIncoming: () => {\n      return get().waterData.reduce((acc, value) => {\n        acc += value.incoming;\n        return acc;\n      }, 0)\n    },\n\n    getTotalOutgoing: () => {\n      return get().waterData.reduce((acc, value) => {\n        acc += value.outgoing;\n        return acc;\n      }, 0)\n    }\n  })\n)\n\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { Line } from '@reactchartjs/react-chart.js'\nimport { useWaterStore } from '../../../store/store'\n\nconst options = {\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n      },\n    }],\n    xAxes: [{\n      ticks: {\n        callback: function(value:string , index: any, values: any) {\n          return new Date(value).toLocaleTimeString()\n        }\n      },\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: (tooltip: any) => {\n        return new Date(tooltip[0].label).toLocaleString()\n      }\n    }\n  },\n  legend: {\n\n  }\n}\n\n\ninterface LineData {\n  labels: string[];\n  datasets: { \n    label: string,\n    data: number[];\n    fill: \"start\";\n    backgroundColor: string;\n  }[]\n}\n\nconst LineChart = () => {\n  // const [data, setData] = useState<LineData>()\n  const waterData = useWaterStore((data) => data.waterData);\n  const fetchWaterData = useWaterStore((data) => data.fetchWaterData);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     fetch(\"https://chatter-somber-scallion.glitch.me/waterLevel\")\n  //       .then<WaterResponse[]>(res => res.json())\n  //       .then(response => {          \n  //         const incomingData: number[] = [];\n  //         const outgoingData: number[] = [];\n  //         const transformedData = response.reduce<LineData>((acc, value) => {\n  //           const date = new Date(value.date);\n\n  //           // acc.labels.push(date.toLocaleTimeString());\n  //           acc.labels.push(value.date);\n  //           incomingData.push(value.incoming);\n  //           outgoingData.push(value.outgoing);\n  //           return acc;\n  //         }, {\n  //           labels: [],\n  //           datasets: [{\n  //             label: 'Inkomend water',\n  //             data: incomingData,\n  //             backgroundColor: 'rgb(129, 173, 248)',\n  //             fill: \"start\",\n  //           }, {\n  //             label: 'Uitgaand water',\n  //             data: outgoingData,\n  //             backgroundColor: 'rgb(66, 133, 244)',\n  //             fill: \"start\",\n  //           }]\n  //         });\n          \n  //         setData(transformedData)\n  //       });\n  //   }\n  //   const timeout = setInterval(fetchData, 2000)\n  //   return () => clearInterval(timeout)\n  // }, [])\n\n  useEffect(() => {\n    const timeout = setInterval(() => {\n      fetchWaterData()\n    }, 2000)\n    return () => clearInterval(timeout)\n  }, [fetchWaterData])\n\n  const data = useMemo(() => {\n    const incomingData: number[] = [];\n    const outgoingData: number[] = [];\n    return waterData.reduce<LineData>((acc, value) => {\n      // const date = new Date(value.date);\n\n      // acc.labels.push(date.toLocaleTimeString());\n      acc.labels.push(value.date);\n      incomingData.push(value.incoming);\n      outgoingData.push(value.outgoing);\n      return acc;\n    }, {\n      labels: [],\n      datasets: [{\n        label: 'Inkomend water',\n        data: incomingData,\n        backgroundColor: 'rgb(129, 173, 248)',\n        fill: \"start\",\n      }, {\n        label: 'Uitgaand water',\n        data: outgoingData,\n        backgroundColor: 'rgb(66, 133, 244)',\n        fill: \"start\",\n      }]\n    });\n  }, [waterData]);\n\n  return (\n  <>\n    { data && <Line type=\"line\" data={data} options={options}  /> }\n  </>\n)}\n\nexport default LineChart\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  fill: \"none\",\n  strokeWidth: 4,\n  strokeLinecap: \"round\",\n  cx: 33,\n  cy: 33,\n  r: 30,\n  className: \"circle\"\n});\n\nfunction SvgLoading(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"40px\",\n    height: \"40px\",\n    viewBox: \"0 0 66 66\",\n    xmlnsname: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoading);\nexport default __webpack_public_path__ + \"static/media/loading.d131c503.svg\";\nexport { ForwardRef as ReactComponent };","import { PropsWithChildren } from 'react'\nimport { ReactComponent as Spinner } from 'assets/images/loading.svg';\nimport './widget.scss'\n\ninterface Props {\n  loading?: boolean\n}\n\nconst Widget = ({ children, loading }: PropsWithChildren<Props>) => {\n  return (\n    <div className=\"widget\">\n      {children}\n      {loading && (\n        <div className=\"widget-loading\">\n          <Spinner className=\"spinner\"/>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Widget\n","import React, { useEffect, useState } from \"react\";\nimport LineChart from \"./LineChart\";\nimport Widget from \"../Widget\";\n\nconst WaterChart = () => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const stopLoading = () => setLoading(false);\n    const timeout = setTimeout(stopLoading, 1000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <Widget loading={loading}>\n      <div className=\"widget-header\">\n        <span className=\"title\">Waterbalans</span>\n      </div>\n      <div className=\"widget-body widget-chart-container\">\n        <div id=\"main-chart\">\n          <LineChart />\n        </div>\n      </div>\n    </Widget>\n  )\n}\n\nexport default WaterChart;","import { useEffect, useState } from \"react\";\nimport { WeatherResponse } from \"../../../models/weather\";\nimport './styles/weather.scss';\n\nconst Weather = () => {\n  // const [loading, setLoading] = useState(true);\n  const [data, setData] = useState<WeatherResponse>();\n  useEffect(() => {\n    // const stopLoading = () => setLoading(false);\n    // const timeout = setTimeout(stopLoading, 1000);\n    // return () => clearTimeout(timeout);\n    fetch(`${process.env.PUBLIC_URL}/api/weather-current.json`)\n      .then((res) => res.json())\n      .then(json => {\n        setData(json)\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n  }, []);\n  // 01d.png weather_icon_full_sun.svg\n  // 01n.png weather_icon_night.svg\n  // 02d.png weather_icon_few_clouds.svg\n  // 03d.png weather_icon_full_clouds.svg\n  // 04d.png weather_icon_cloud_slight_rain.svg\n  // 09d.png weather_icon_rainy.svg\n  // 10d.png weather_icon_sun_rain_clouds.svg\n  // 11d.png weather_icon_thunder.svg\n  // 13d.png weather_icon_snow.svg\n  // 50d.png \n  if (!data) return null;\n  \n  return (\n    <div className={`widget widget-tile be-loading`}>\n      <div className=\"widget-header\">\n        <div className=\"title\">\n          { data?.name } \n        </div>\n      </div>\n      <div className=\"widget-container container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 text-center\">\n            <div className=\"weather_icon weather_few_clouds\"/>\n            <div className=\"weather-today\">\n             ({data.weather[0].description})\n            </div>\n          </div>\n          <div className=\"col-sm-4 d-flex flex-column justify-content-center\">\n            <div className=\"temperature\">\n              {data.main.temp.toFixed(1)}°\n            </div>\n          </div>\n          <div className=\"col-sm-4\">\n            hum: {data.main.humidity}%\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-3 text-center\">\n            <div className=\"weather_icon weather_full_sun\"/>\n            {addDay(1).toLocaleDateString()}\n          </div>\n          <div className=\"col-sm-3 text-center\">\n            <div className=\"weather_icon weather_sun_rain_clouds\"/>\n            {addDay(2).toLocaleDateString()}\n          </div>\n          <div className=\"col-sm-3 text-center\">\n            <div className=\"weather_icon weather_thunder\"/>\n            {addDay(3).toLocaleDateString()}\n          </div>\n          <div className=\"col-sm-3 text-center\">\n            <div className=\"weather_icon weather_snow\"/>\n            {addDay(4).toLocaleDateString()}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Weather;\n\nconst addDay = (days: number) => {\n  return new Date(new Date().getTime() + days * 86400000);\n}","import React, { useEffect, useMemo, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTint, faBath } from '@fortawesome/fontawesome-free-solid'\nimport { useWaterStore } from \"../../../store/store\";\nimport Widget from \"../Widget\";\n\nconst LITERS_IN_BATHTUB = 80;\n\nconst WaterSaved = () => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const stopLoading = () => setLoading(false);\n    const timeout = setTimeout(stopLoading, 1000);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const totalIncoming = useWaterStore(store => store.getTotalIncoming());\n  const totalOutgoing = useWaterStore(store => store.getTotalOutgoing());\n\n  const diff = useMemo(() => {\n    return totalOutgoing - totalIncoming;\n  }, [totalIncoming, totalOutgoing])\n\n  const bathtubs = useMemo(()  => {\n    return Math.ceil(diff /  LITERS_IN_BATHTUB);\n  }, [diff]);\n\n  return (\n    <Widget loading={loading}>\n      <div className=\"widget-header\">\n        <span className=\"title\">Opgevangen water</span>\n      </div>\n      <div className=\"widget-body display-4 water-saved text-center\">\n          {diff.toFixed(1)}L\n      </div>\n    </Widget>\n  )\n}\n\nexport default WaterSaved;","import React, { useMemo } from \"react\";\nimport { useWaterStore } from \"../../../store/store\";\nimport Widget from \"../Widget\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport './saturation.scss';\n\nconst Saturation = () => {\n\n  const totalIncoming = useWaterStore(store => store.getTotalIncoming());\n  const totalOutgoing = useWaterStore(store => store.getTotalOutgoing());\n\n  const saturation = useMemo(() => {\n    return totalIncoming / totalOutgoing * 100;\n  }, [totalIncoming, totalOutgoing])\n\n  return (\n    <Widget loading={isNaN(saturation)}>\n      <div className=\"widget-header\">\n        <span className=\"title\">Verzadiging</span>\n      </div>\n      <div className=\"widget-body text-larger\">\n        {!isNaN(saturation) && <CircularProgressbar className=\"saturation-chart\" value={saturation} text={`${saturation.toFixed(1)}%`} />}\n      </div>\n    </Widget>\n  )\n}\n\nexport default Saturation;","export const getAuthToken = () => {\n  return localStorage.getItem(\"token\");\n}\n\nexport const setAuthToken = (token: string) => {\n  localStorage.setItem(\"token\", token);\n}\n\nexport const clearAuthToken = () => {\n  localStorage.removeItem(\"token\");\n}\n\n// Convenience function, returns header to pass to `fetch` api\nexport const getAuthHeader = () => {\n  return ['x-auth-token', getAuthToken()!]\n}","import { CustomerData, CustomerListData } from \"models/customer\";\n\ninterface Props {\n  data: CustomerListData;\n  selected?: boolean;\n\n  onClick: (customer: CustomerData) => void\n}\n\nconst CustomerRow = (props: Props) => {\n  const { data, selected, onClick } = props;\n  const date = data.last_water ? new Date(data.last_water).toLocaleString() : \"-\";\n\n  return (\n    <tr onClick={() => onClick(data)} className={selected ? \"selected\" : \"\"}>\n      <td>\n        <span className=\"d-block badge badge-info\">ID: {data.id}</span>\n      </td>\n      <td>{data.name}</td>\n      <td>{date}</td>\n    </tr>\n  )\n}\nexport default CustomerRow;\n\n","import { CustomerListData } from \"models/customer\";\nimport React from \"react\";\nimport { useWaterStore } from \"store/store\";\nimport CustomerRow from \"./CustomerRow\";\nimport './styles/customerList.scss';\n\ninterface Props {\n  data: CustomerListData[];\n  onLogout: () => void;\n}\n\nconst CustomerList = (props: Props) => {\n  const { data, onLogout } = props;\n  const setCustomerId = useWaterStore((data) => data.setCustomerId);\n  const customerId = useWaterStore((data) => data.customerId);\n\n  return (\n    <>\n      <table className=\"table table-striped table-hover customer-list\">\n        <thead>\n          <tr>\n            <th scope=\"col\" style={{width: 32}}>#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Last data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((c) => \n            <CustomerRow key={c.id} data={c} onClick={() => setCustomerId(c.id)} selected={customerId === c.id}/>\n          )}\n        </tbody>  \n      </table>\n      <div className=\"form-group\">\n        <button className=\"w-100 btn btn-success\" onClick={onLogout} >\n          Logout\n        </button>\n      </div>\n    </>\n  )\n}\nexport default CustomerList;\n","export default __webpack_public_path__ + \"static/media/groendak.8ad2a181.jpg\";","// import { API_URL } from \"api\";\nimport { setAuthToken } from \"misc/authentication\";\nimport { useState } from \"react\";\nimport img from './styles/groendak.jpg';\n\ninterface Props {\n  onLogin: () => void;\n}\n\nconst Login = ({ onLogin }: Props) => {\n\n  const [password, setPassword] = useState<string>(\"safehouse ominous overdrive\")\n\n  const handleLogin = () => {\n    fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: 'post',\n      headers: [['Content-Type', 'application/json']],\n      body: JSON.stringify({\n        password\n      })\n    }).then((response) => {\n      if(response.status === 401) {\n        console.warn(\"WRONG PW\")\n      } else {\n        response.text().then((response) => {\n          onLogin();\n          setAuthToken(response);\n        });\n      }\n    })\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-center\">Log in to groendakmonitor</h3>\n      <form>\n        <div className=\"mt-5\">\n          <div className=\"form-group\">\n            <label className=\"form-label text-start w-100\">\n              Password\n              <input type=\"password\" className=\"form-control mt-2\" onChange={(e) => {setPassword(e.currentTarget.value)}} value={password} />              \n            </label>\n          </div>\n        </div>\n      </form>\n      <div className=\"form-group\">\n        <button className=\"w-100 btn btn-success\" onClick={handleLogin} >\n          Login\n        </button>\n      </div>\n      <img src={img} alt={\"dak\"} className=\"card-img-top\" />\n    </div>\n\n  )\n}\n\nexport default Login;","import { clearAuthToken, getAuthHeader, getAuthToken } from \"misc/authentication\";\nimport { CustomerListData } from \"models/customer\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport CustomerList from \"../CustomerList\";\nimport Login from \"../Login\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst Admin = ({ onClose }: Props) => {\n  const [authenticated, setAuthenticated] = useState(!!getAuthToken());\n  const [data, setData] = useState<CustomerListData[]>();\n\n  const handleLogout = () => {\n    clearAuthToken();\n    setAuthenticated(false);\n    onClose();\n  };\n\n  useEffect(() => {\n    if (authenticated && getAuthToken()) {\n      fetch(`${process.env.REACT_APP_API_URL}/customers`, {\n        method: 'get',\n        headers: [['Content-Type', 'application/json'], getAuthHeader()],\n      })\n      .then<CustomerListData[]>((response) => {\n        if(response.status === 401) {\n          clearAuthToken();\n          setAuthenticated(false);\n        }\n        return response.json()\n      }).then((response) => {\n        setData(response);\n      })\n    }\n  }, [authenticated]);\n\n  return (\n    <div className=\"modal fade show d-block\" role=\"dialog\" aria-hidden=\"true\">\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Admin</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={onClose}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            { !authenticated && <Login onLogin={() => setAuthenticated(true)}/> }\n            { authenticated && !data && <>Loading..</>}\n            { authenticated && data && <CustomerList data={data} onLogout={handleLogout} /> }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Admin;","import React, { useState } from 'react';\nimport WaterChart from '../dashboard/WaterChart';\nimport Weather from '../dashboard/Weather';\nimport WaterSaved from '../dashboard/WaterSaved';\nimport Saturation from '../dashboard/Saturation';\nimport Admin from 'components/admin/Admin';\nimport useKey from \"@rooks/use-key\";\nimport './styles/app.scss';\n\nconst App = () => {\n  const [admin, setAdmin] = useState(false)\n\n  useKey([\"~\"], (a) => {\n    setAdmin(a => !a)\n  })\n\n  return (\n    <div className=\"app d-flex pb-4 align-items-center position-relative\">\n      <div className=\"main-content container d-flex flex-column px-4\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6 col-lg-3 mb-4\">\n            <WaterSaved />\n          </div>\n          <div className=\"col-xs-12 col-md-6 col-lg-3 mb-4\">\n            <div className=\"widget\">\n              <div className=\"widget-header\">\n                Besparing energie\n              </div>\n              <div className=\"widget-body\">\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-md-6 col-lg-3 mb-4\">\n            <div className=\"widget widget-tile\">\n              <div className=\"widget-header\">\n                Isolatie\n              </div>\n              <div className=\"widget-body\"></div>\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-md-6 col-lg-3 mb-4\">\n            <Saturation />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <WaterChart />\n          </div>\n          <div className=\"col-md-4\">\n            <Weather />\n          </div>\n        </div>\n      </div>\n      { admin && <Admin onClose={() => setAdmin(false)} /> }\n      <div className=\"admin-trigger\" onClick={() => setAdmin(true)}></div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'scss/bootstrap.scss';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}